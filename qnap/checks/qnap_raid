#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Andre Schuiki <andre.schuiki@gmail.com>


def inventory_qnap_raid(checkname, info):
#    import pprint; pprint.pprint(info)
    inventory = []
    for raid, state in info:
	if raid.startswith( '[RAID' ):
	    inventory.append( (raid, "", None) )
    return inventory


def check_qnap_raid(item, _no_params, info):
    for raid, state in info:
	infotext = "RAID State of %s is %s" % (raid, state)
        if raid == item:
	    if (state == "Ready"): 
	        return (0, "OK - " + infotext)
            elif (state == "Rebuilding..."): 
                return (1, "Warning - " + infotext) 
	    elif (state != "Ready"):
                return (2, "Critical - " + infotext)
    return (3, "UNKNOWN - RAID")


check_info['qnap_raid'] = (check_qnap_raid, "QNAP %s", 0, inventory_qnap_raid)
snmp_info['qnap_raid'] = ( ".1.3.6.1.4.1.24681.1.2.17.1", [ "2", "6",] )
snmp_scan_functions['qnap_raid'] = \
    lambda oid: "QNAP Systems" in oid('.1.3.6.1.2.1.47.1.1.1.1.12.1')
